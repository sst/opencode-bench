name: Publish and Benchmark Preview Packages

on:
  push:
    branches:
      - "**"
    tags:
      - "!**"
  pull_request:

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.publish.outputs.sha }}
      urls: ${{ steps.publish.outputs.urls }}
      packages: ${{ steps.publish.outputs.packages }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.21

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      - id: publish
        name: Publish preview with pkg.pr.new
        run: bunx pkg-pr-new publish --bun

  benchmark:
    runs-on: ubuntu-latest
    needs: publish
    if: needs.publish.result == 'success' && needs.publish.outputs.urls != ''
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.21

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Install OpenCode CLI
        run: bun add -g opencode-ai

      - name: Run openreval benchmark
        env:
          OPENCODE_API_KEY: ${{ secrets.OPENCODE_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGE_URLS: ${{ needs.publish.outputs.urls }}
        run: |
          set -euo pipefail

          PACKAGE_URL="${PACKAGE_URLS%% *}"

          if [ -z "${PACKAGE_URL}" ]; then
            echo "No package URL found in publish outputs." >&2
            exit 1
          fi

          PACKAGE_SPEC="orvl@${PACKAGE_URL}"
          OUTPUT_FILE="benchmark.json"
          COMMAND="bunx \"${PACKAGE_SPEC}\" opencode --output \"${OUTPUT_FILE}\""

          echo "Executing: ${COMMAND}"
          if ! bunx "${PACKAGE_SPEC}" opencode --output "${OUTPUT_FILE}"; then
            echo "openreval benchmark failed, dumping OpenCode logs..." >&2
            find /home/runner/.local/share/opencode/log -type f -print -exec cat {} + || true
            exit 1
          fi

      - name: Send Discord notification
        if: success()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          set -euo pipefail
          if [ ! -f benchmark.json ]; then
            echo "benchmark.json not found; skipping Discord notification." >&2
            exit 0
          fi

          bun run tsx scripts/discord-sample.ts benchmark.json
